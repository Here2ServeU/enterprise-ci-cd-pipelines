# ========================================
# GitHub Actions Workflow: .github/workflows/security-deploy.yml
# ========================================

name: DevSecOps CI/CD Pipeline

#on:
#  push:
#    branches: [main]
#  pull_request:

env:
  IMAGE_TAG: ${{ github.run_number }}
  ECR_REPO: your-account-id.dkr.ecr.us-east-1.amazonaws.com/emmanuel-services
  ACR_REGISTRY: youracr.azurecr.io
  ACR_REPO: emmanuel-services
  GCP_PROJECT_ID: your-gcp-project-id
  GCR_REPO: emmanuel-services

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Security Tools
        run: |
          pip install checkov
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks_Linux_x86_64.tar.gz | tar -xz -C /usr/local/bin gitleaks

      - name: Run Checkov (Terraform Scan)
        run: checkov -d terraform --output json > checkov-report.json || true

      - name: Run Gitleaks (Secrets Scan)
        run: gitleaks detect --source . --report-format sarif --report-path gitleaks-report.sarif || true

      - name: Build Docker Image
        run: docker build -t emmanuel-services:${{ env.IMAGE_TAG }} .

      - name: Run Trivy (Image Scan)
        run: trivy image --severity CRITICAL,HIGH --format table --output trivy-scan.txt emmanuel-services:${{ env.IMAGE_TAG }} || true

      - name: Deploy to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REPO
          docker tag emmanuel-services:${{ env.IMAGE_TAG }} $ECR_REPO:${{ env.IMAGE_TAG }}
          docker push $ECR_REPO:${{ env.IMAGE_TAG }}

      - name: Deploy to Azure ACR
        env:
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
        run: |
          echo $ACR_PASSWORD | docker login $ACR_REGISTRY -u $ACR_USERNAME --password-stdin
          docker tag emmanuel-services:${{ env.IMAGE_TAG }} $ACR_REGISTRY/$ACR_REPO:${{ env.IMAGE_TAG }}
          docker push $ACR_REGISTRY/$ACR_REPO:${{ env.IMAGE_TAG }}

      - name: Deploy to Google GCR
        env:
          GCR_KEY: ${{ secrets.GCR_KEY_JSON }}
        run: |
          echo "$GCR_KEY" > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud auth configure-docker
          docker tag emmanuel-services:${{ env.IMAGE_TAG }} gcr.io/$GCP_PROJECT_ID/$GCR_REPO:${{ env.IMAGE_TAG }}
          docker push gcr.io/$GCP_PROJECT_ID/$GCR_REPO:${{ env.IMAGE_TAG }}

      - name: Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: devsecops-reports
          path: |
            checkov-report.json
            gitleaks-report.sarif
            trivy-scan.txt
